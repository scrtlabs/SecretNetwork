{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "AcknowledgementMsgWhoAmI",
  "description": "This is the final result type that is created and serialized in a contract for every init/execute/migrate call. The VM then deserializes this type to distinguish between successful and failed executions.\n\nWe use a custom type here instead of Rust's Result because we want to be able to define the serialization, which is a public interface. Every language that compiles to Wasm and runs in the ComsWasm VM needs to create the same JSON representation.\n\n# Examples\n\nSuccess:\n\n``` # use cosmwasm_std::{to_vec, ContractResult, Response}; let response: Response = Response::default(); let result: ContractResult<Response> = ContractResult::Ok(response); assert_eq!(to_vec(&result).unwrap(), br#\"{\"ok\":{\"messages\":[],\"attributes\":[],\"events\":[],\"data\":null}}\"#.to_vec()); ```\n\nFailure:\n\n``` # use cosmwasm_std::{to_vec, ContractResult, Response}; let error_msg = String::from(\"Something went wrong\"); let result: ContractResult<Response> = ContractResult::Err(error_msg); assert_eq!(to_vec(&result).unwrap(), br#\"{\"error\":\"Something went wrong\"}\"#.to_vec()); ```",
  "anyOf": [
    {
      "type": "object",
      "required": [
        "ok"
      ],
      "properties": {
        "ok": {
          "$ref": "#/definitions/WhoAmIResponse"
        }
      },
      "additionalProperties": false
    },
    {
      "description": "An error type that every custom error created by contract developers can be converted to. This could potientially have more structure, but String is the easiest.",
      "type": "object",
      "required": [
        "error"
      ],
      "properties": {
        "error": {
          "type": "string"
        }
      },
      "additionalProperties": false
    }
  ],
  "definitions": {
    "WhoAmIResponse": {
      "description": "This is the success response we send on ack for PacketMsg::WhoAmI. Return the caller's account address on the remote chain",
      "type": "object",
      "required": [
        "account"
      ],
      "properties": {
        "account": {
          "type": "string"
        }
      }
    }
  }
}
