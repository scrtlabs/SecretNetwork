trigger:
  branches:
    include:
      - "*" # must quote since "*" is a YAML reserved character; we want a string
  paths:
    exclude:
      - "*.md"
      - "*.png"
      - "docs/*"
      - ".gitignore"
      - "LICENSE"

pool:
  name: "sgx scale set"

workspace:
  clean: all # what to clean up before the job runs

variables:
  baseImageRepository: 'azcr.io/enigmampc/ci-base-image'
  nodeImageRepository: 'azcr.io/enigmampc/ci-node-image'
  containerRegistry: 'enigmampcdocker'
  dockerfilePath: '$(Build.SourcesDirectory)/deployment/dockerfiles/base.Dockerfile'
  tag: '$(Build.BuildId)'
  DOCKER_BUILDKIT: 1

steps:
  - script: echo $(spid) > spid.txt; echo $(api-key-dev) > api_key.txt
    displayName: "Save api keys"

  - task: Docker@2
    displayName: "Build base image"
    inputs:
      command: build
      repository: '$(baseImageRepository)'
      tags: |
        $(tag)
        latest
      buildContext: .
      arguments: --build-arg BUILDKIT_INLINE_CACHE=1 --secret id=API_KEY,src=api_key.txt --secret id=SPID,src=spid.txt --cache-from $(baseImageRepository) --build-arg SGX_MODE=HW
      dockerfile: '$(dockerfilePath)'

  - script: |
      cp deployment/ci/bootstrap_init.sh deployment/docker/bootstrap/bootstrap_init.sh
      cp deployment/ci/node_init.sh deployment/docker/node/node_init.sh
      cp deployment/ci/startup.sh deployment/docker/startup.sh
      cp deployment/ci/node_key.json deployment/docker/node_key.json
    displayName: Overwrite node scripts

  - task: Docker@2
    displayName: "Build release image"
    inputs:
      command: build
      repository: '$(nodeImageRepository)'
      tags: latest
      buildContext: .
      arguments: --build-arg BUILDKIT_INLINE_CACHE=1 --build-arg SCRT_BIN_IMAGE=$(baseImageRepository):$(tag) --cache-from $(nodeImageRepository) --build-arg SGX_MODE=HW
      Dockerfile: deployment/dockerfiles/release.Dockerfile

  - task: Docker@2
    displayName: "Build enclave tests"
    inputs:
      command: build
      repository: rust-enclave-test
      tags: latest
      buildContext: .
      arguments: --build-arg SGX_MODE=HW
      Dockerfile: deployment/dockerfiles/enclave-test.Dockerfile

  - task: Docker@2
    displayName: "Build tests image"
    inputs:
      command: build
      repository: tests-base-image
      tags: latest
      buildContext: .
      arguments: --build-arg SGX_MODE=HW
      Dockerfile: deployment/dockerfiles/go-tests.Dockerfile

  - script: export DOCKER_CLIENT_TIMEOUT=120 && export COMPOSE_HTTP_TIMEOUT=120 && docker-compose --compatibility -f deployment/ci/docker-compose.ci.yaml up --exit-code-from base aesm base
    displayName: "Run system tests"

  - script: docker-compose -f deployment/ci/docker-compose.ci.yaml --compatibility up --exit-code-from node aesm bootstrap node
    displayName: "Run integration tests"

  - script: docker-compose -f deployment/ci/docker-compose.ci.yaml --compatibility up --exit-code-from enclave-test aesm enclave-test
    displayName: "Run enclave tests"

  - script: docker-compose -f deployment/ci/docker-compose.ci.yaml --compatibility down
    condition: always()
    displayName: "Shutdown"
